# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")

hicollie_part_path = "//base/hiviewdfx/hicollie"
config("hicollie_include") {
  include_dirs = [
    ".",
    "${hicollie_part_path}/interfaces/native/innerkits/include/xcollie",
  ]
  if (is_ohos) {
    cflags_cc = [ "-D__XCOLLIE_OHOS__" ]
  }
}

ohos_source_set("libhicollie_source") {
  sources = [
    "handler_checker.cpp",
    "sample_stack_printer.cpp",
    "thread_sampler.cpp",
    "thread_sampler_utils.cpp",
    "watchdog.cpp",
    "watchdog_inner.cpp",
    "watchdog_task.cpp",
    "xcollie.cpp",
    "xcollie_utils.cpp",
  ]
  configs = [ ":hicollie_include" ]

  external_deps = [
    "c_utils:utils",
    "faultloggerd:libasync_stack",
    "faultloggerd:libbacktrace_local",
    "faultloggerd:libunwinder",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hiview:libucollection_client",
    "init:libbegetutil",
    "ipc:ipc_core",
    "storage_service:storage_manager_acl",
  ]

  defines = []
  if (defined(global_parts_info) &&
      defined(global_parts_info.notification_eventhandler)) {
    external_deps += [ "eventhandler:libeventhandler" ]
    defines += [ "EVENTHANDLER_ENABLE" ]
  }

  part_name = "hicollie"
  subsystem_name = "hiviewdfx"
}

group("libhicollie") {
  deps = [ ":libhicollie_source" ]
}
